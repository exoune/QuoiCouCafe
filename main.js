const Discord = require('discord.js');
const client = new Discord.Client();
const { google } = require('googleapis');
const { execSync } = require('child_process');

// Token de votre bot Discord
const TOKEN = process.env.TOKEN;

// ID du salon o√π envoyer le message
const CHANNEL_ID = '1217786944470126672';

// ID de l'utilisateur √† mentionner
const USER_ID = '365180026376945667';

// Nombre de r√©actions pour d√©clencher l'√©v√©nement
const REACTION_THRESHOLD = 5;

// Fonction pour envoyer un message √† un canal sp√©cifique √† une heure pr√©cise
async function send_message_at_time(channel, message, hour, minute) {
    while (true) {
        // R√©cup√©ration de l'heure actuelle
        const now = new Date();
        const target_time = new Date(now.getFullYear(), now.getMonth(), now.getDate(), hour, minute);

        // Si l'heure actuelle est pass√©e, passer √† l'heure suivante
        if (now >= target_time) {
            target_time.setDate(target_time.getDate() + 1);
        }

        // Calcul de la dur√©e √† attendre
        const wait_seconds = (target_time - now);

        // Attendre jusqu'√† l'heure sp√©cifi√©e
        await new Promise(resolve => setTimeout(resolve, wait_seconds));

        // Envoyer le message
        const channelObj = client.channels.cache.get(channel);
        if (channelObj) {
            // Envoyer un gif de chat
            channelObj.send("https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif");
            let sentMessage = await channelObj.send(message);
            // Ajouter des r√©actions au message
            if (message.includes("Pause 10h15 ?")) {
                await sentMessage.react("üåû"); // Soleil
            } else if (message.includes("Miam 12h : üêÆ ou 12h15 : üêî ?")) {
                await sentMessage.react("üêÆ"); // Vache
                await sentMessage.react("üêî"); // Poulet
            }
        } else {
            console.log(`Channel with ID ${channel} not found. Message not sent.`);
        }
    }
}

// √âv√©nement de message
client.on('message', async message => {
    if (message.content.startsWith('!pause')) {
        // Envoyer le message "PAUUUUUUUSE !!!!!" dans le canal sp√©cifi√©
        message.channel.send('PAUUUUUUUSE !!!!!  ‚ö†Ô∏è');
        await sentMessage.react("‚ö†Ô∏è"); // Danger
    }
});

// √âv√©nement de d√©marrage du bot
client.once('ready', async () => {
    console.log(`${client.user.tag} est pr√™t √† fonctionner !`);

    // Planifier l'envoi des messages √† des heures sp√©cifiques
    // √Ä 9h30
    send_message_at_time(CHANNEL_ID, "Pause 10h15 ?", 8, 30);
    // √Ä 11h
    send_message_at_time(CHANNEL_ID, "Miam 12h : üêÆ ou 12h15 : üêî ?", 10, 0);
    // Cl√©mence au dodo !
    send_message_at_time(CHANNEL_ID, "Cl√©mence au dodo ! HOP HOP HOP on arr√™te de travailler", 14, 55);
});

// √âv√©nement de r√©action
client.on('messageReactionAdd', async (reaction, user) => {
    // V√©rifier si le message a atteint le seuil de r√©actions et a pour titre "Pause 10h15 ?" ou "Miam 12h : üêÆ ou 12h15 : üêî ?"
    if (reaction.count >= REACTION_THRESHOLD && (reaction.message.content.includes("Pause 10h15 ?") || reaction.message.content.includes("Miam 12h : üêÆ ou 12h15 : üêî ?"))) {
        // Cr√©er l'√©v√©nement
        const event_title = "CAFE";
        const event_time = reaction.message.createdAt;
        reaction.message.channel.send(`Cr√©ation de l'√©v√©nement ${event_title} √† ${event_time} !`);

        // Cr√©er un √©v√©nement dans le calendrier
        try {
            execSync(`gcalcli add '${event_title}' --when '${event_time.toISOString().slice(0, 19).replace('T', ' ')}'`);
        } catch (error) {
            console.error(`Erreur lors de la cr√©ation de l'√©v√©nement dans le calendrier : ${error}`);
        }
    }
});

// Lancer le bot
client.login(TOKEN);
